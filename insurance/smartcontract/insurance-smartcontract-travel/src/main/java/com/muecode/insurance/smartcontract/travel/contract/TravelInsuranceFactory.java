package com.muecode.insurance.smartcontract.travel.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.4.
 */
@SuppressWarnings("rawtypes")
public class TravelInsuranceFactory extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611ee3806100326000396000f3fe608060405260043610620000795760003560e01c8063712bf5d71162000054578063712bf5d7146200010a578063942d361d1462000131578063be8af9aa1462000149578063ef147ef8146200017057600080fd5b8063051e280e146200007e578063481c6a7514620000975780636f9c8bbb14620000d6575b600080fd5b620000956200008f36600462000b1e565b62000195565b005b348015620000a457600080fd5b50600054620000b9906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b348015620000e357600080fd5b50620000fb620000f536600462000b92565b620004a7565b604051620000cd919062000bfd565b3480156200011757600080fd5b506200012262000537565b604051620000cd919062000ca0565b3480156200013e57600080fd5b50620000fb620006ff565b3480156200015657600080fd5b50620001616200077c565b604051620000cd919062000db1565b3480156200017d57600080fd5b50620000956200018f36600462000e32565b62000895565b60006005600085815260200190815260200160002060405180608001604052908160008201548152602001600182018054620001d19062000e84565b80601f0160208091040260200160405190810160405280929190818152602001828054620001ff9062000e84565b8015620002505780601f10620002245761010080835404028352916020019162000250565b820191906000526020600020905b8154815290600101906020018083116200023257829003601f168201915b505050505081526020016002820154815260200160038201548152505090506000816040015111620002c95760405162461bcd60e51b815260206004820152601760248201527f54656d706c61746520646f6573206e6f7420657869737400000000000000000060448201526064015b60405180910390fd5b806040015134146200031e5760405162461bcd60e51b815260206004820152601c60248201527f496e7375726564206d7573742070617920746865207072656d69756d000000006044820152606401620002c0565b6000805460408084015190516001600160a01b039092169281156108fc029290818181858888f193505050501580156200035c573d6000803e3d6000fd5b50600081600001518260200151858560008054906101000a90046001600160a01b03163387604001518860600151604051620003989062000a12565b620003ab98979695949392919062000eba565b604051809103906000f080158015620003c8573d6000803e3d6000fd5b5090506000620003d98585620009ba565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0385161790556040519091506002906200043990839062000f33565b90815260408051918290036020908101909220805460018181018355600092835284832090910180546001600160a01b039097166001600160a01b03199788168117909155338352600385529282208054918201815582529290209091018054909316179091555050505050565b60606000620004b78484620009ba565b9050600281604051620004cb919062000f33565b90815260408051918290036020908101832080548083028501830190935282845291908301828280156200052957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200050a575b505050505091505092915050565b336000908152600360205260408120546060919067ffffffffffffffff81111562000566576200056662000a20565b6040519080825280602002602001820160405280156200060657816020015b620005f26040518061014001604052806000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000151581526020016000151581525090565b815260200190600190039081620005855790505b50905060005b33600090815260036020526040902054811015620006f95733600090815260036020526040812080548390811062000648576200064862000f51565b6000918252602082200154604080516303bc5de360e41b815290516001600160a01b0390921692633bc5de30926004808401938290030181865afa15801562000695573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620006bf919081019062000fe9565b905080838381518110620006d757620006d762000f51565b6020026020010181905250508080620006f0906200111f565b9150506200060c565b50919050565b6000546060906001600160a01b031633146200071a57600080fd5b60018054806020026020016040519081016040528092919081815260200182805480156200077257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000753575b5050505050905090565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156200088c578382906000526020600020906004020160405180608001604052908160008201548152602001600182018054620007e09062000e84565b80601f01602080910402602001604051908101604052809291908181526020018280546200080e9062000e84565b80156200085f5780601f1062000833576101008083540402835291602001916200085f565b820191906000526020600020905b8154815290600101906020018083116200084157829003601f168201915b505050505081526020016002820154815260200160038201548152505081526020019060010190620007a0565b50505050905090565b6000546001600160a01b03163314620008ad57600080fd5b6004805460009182620008c0836200111f565b9091555060408051608081018252828152602080820188815282840188905260608301879052600085815260059092529290208151815591519293509182919060018201906200091190826200119a565b506040820151600282015560609091015160039091015560068054600181018255600091909152815160049091027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810191825560208301518392917ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4001906200099c90826200119a565b50604082015181600201556060820151816003015550505050505050565b606060008390506000839050600082604051806040016040528060018152602001605f60f81b81525083604051602001620009f89392919062001267565b60408051808303601f190181529190529695505050505050565b610bfd80620012b183390190565b634e487b7160e01b600052604160045260246000fd5b604051610140810167ffffffffffffffff8111828210171562000a5d5762000a5d62000a20565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562000a8f5762000a8f62000a20565b604052919050565b600067ffffffffffffffff82111562000ab45762000ab462000a20565b50601f01601f191660200190565b600082601f83011262000ad457600080fd5b813562000aeb62000ae58262000a97565b62000a63565b81815284602083860101111562000b0157600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121562000b3457600080fd5b83359250602084013567ffffffffffffffff8082111562000b5457600080fd5b62000b628783880162000ac2565b9350604086013591508082111562000b7957600080fd5b5062000b888682870162000ac2565b9150509250925092565b6000806040838503121562000ba657600080fd5b823567ffffffffffffffff8082111562000bbf57600080fd5b62000bcd8683870162000ac2565b9350602085013591508082111562000be457600080fd5b5062000bf38582860162000ac2565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101562000c405783516001600160a01b03168352928401929184019160010162000c19565b50909695505050505050565b60005b8381101562000c6957818101518382015260200162000c4f565b50506000910152565b6000815180845262000c8c81602086016020860162000c4c565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562000da357603f1989840301855281516101408151855288820151818a87015262000cf98287018262000c72565b915050878201518582038987015262000d13828262000c72565b9150506060808301518683038288015262000d2f838262000c72565b9250505060808083015162000d4e828801826001600160a01b03169052565b505060a0828101516001600160a01b03169086015260c0808301519086015260e08083015190860152610100808301511515908601526101209182015115159190940152938601939086019060010162000cc7565b509098975050505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562000da357603f19898403018552815160808151855288820151818a87015262000e098287018262000c72565b838a0151878b015260609384015193909601929092525050938601939086019060010162000dd8565b60008060006060848603121562000e4857600080fd5b833567ffffffffffffffff81111562000e6057600080fd5b62000e6e8682870162000ac2565b9660208601359650604090950135949350505050565b600181811c9082168062000e9957607f821691505b602082108103620006f957634e487b7160e01b600052602260045260246000fd5b60006101008a835280602084015262000ed68184018b62000c72565b9050828103604084015262000eec818a62000c72565b9050828103606084015262000f02818962000c72565b6001600160a01b0397881660808501529590961660a08301525060c081019290925260e09091015295945050505050565b6000825162000f4781846020870162000c4c565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b600082601f83011262000f7957600080fd5b815162000f8a62000ae58262000a97565b81815284602083860101111562000fa057600080fd5b62000fb382602083016020870162000c4c565b949350505050565b80516001600160a01b038116811462000fd357600080fd5b919050565b8051801515811462000fd357600080fd5b60006020828403121562000ffc57600080fd5b815167ffffffffffffffff808211156200101557600080fd5b9083019061014082860312156200102b57600080fd5b6200103562000a36565b825181526020830151828111156200104c57600080fd5b6200105a8782860162000f67565b6020830152506040830151828111156200107357600080fd5b620010818782860162000f67565b6040830152506060830151828111156200109a57600080fd5b620010a88782860162000f67565b606083015250620010bc6080840162000fbb565b6080820152620010cf60a0840162000fbb565b60a082015260c083015160c082015260e083015160e08201526101009150620010fa82840162000fd8565b8282015261012091506200111082840162000fd8565b91810191909152949350505050565b6000600182016200114057634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156200119557600081815260208120601f850160051c81016020861015620011705750805b601f850160051c820191505b8181101562001191578281556001016200117c565b5050505b505050565b815167ffffffffffffffff811115620011b757620011b762000a20565b620011cf81620011c8845462000e84565b8462001147565b602080601f831160018114620012075760008415620011ee5750858301515b600019600386901b1c1916600185901b17855562001191565b600085815260208120601f198616915b82811015620012385788860151825594840194600190910190840162001217565b5085821015620012575787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600084516200127b81846020890162000c4c565b8451908301906200129181836020890162000c4c565b8451910190620012a681836020880162000c4c565b019594505050505056fe60806040523480156200001157600080fd5b5060405162000bfd38038062000bfd83398101604081905262000034916200019a565b60008890556001620000478882620002fd565b506002620000568782620002fd565b506003620000658682620002fd565b50600480546001600160a01b039586166001600160a01b031991821617909155600580549490951693169290921790925560069190915560075550506008805461ffff1916600117905550620003c99050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000e057600080fd5b81516001600160401b0380821115620000fd57620000fd620000b8565b604051601f8301601f19908116603f01168101908282118183101715620001285762000128620000b8565b816040528381526020925086838588010111156200014557600080fd5b600091505b838210156200016957858201830151818301840152908201906200014a565b600093810190920192909252949350505050565b80516001600160a01b03811681146200019557600080fd5b919050565b600080600080600080600080610100898b031215620001b857600080fd5b885160208a01519098506001600160401b0380821115620001d857600080fd5b620001e68c838d01620000ce565b985060408b0151915080821115620001fd57600080fd5b6200020b8c838d01620000ce565b975060608b01519150808211156200022257600080fd5b50620002318b828c01620000ce565b9550506200024260808a016200017d565b93506200025260a08a016200017d565b60c08a015160e0909a0151989b979a5095989497939692505050565b600181811c908216806200028357607f821691505b602082108103620002a457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f857600081815260208120601f850160051c81016020861015620002d35750805b601f850160051c820191505b81811015620002f457828155600101620002df565b5050505b505050565b81516001600160401b03811115620003195762000319620000b8565b62000331816200032a84546200026e565b84620002aa565b602080601f831160018114620003695760008415620003505750858301515b600019600386901b1c1916600185901b178555620002f4565b600085815260208120601f198616915b828110156200039a5788860151825594840194600190910190840162000379565b5085821015620003b95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61082480620003d96000396000f3fe60806040526004361061003f5760003560e01c80633a0132c7146100445780633bc5de301461004e57806373d4a13a14610079578063a75ac608146100a4575b600080fd5b61004c6100ac565b005b34801561005a57600080fd5b5061006361010c565b6040516100709190610656565b60405180910390f35b34801561008557600080fd5b5061008e61039c565b6040516100709a9998979695949392919061072e565b61004c610587565b6004546001600160a01b031633146100c357600080fd5b6005546006546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156100ff573d6000803e3d6000fd5b506008805460ff19169055565b6101786040518061014001604052806000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000151581526020016000151581525090565b6040805161014081019091526000805482526001805460208401919061019d906107b4565b80601f01602080910402602001604051908101604052809291908181526020018280546101c9906107b4565b80156102165780601f106101eb57610100808354040283529160200191610216565b820191906000526020600020905b8154815290600101906020018083116101f957829003601f168201915b5050505050815260200160028201805461022f906107b4565b80601f016020809104026020016040519081016040528092919081815260200182805461025b906107b4565b80156102a85780601f1061027d576101008083540402835291602001916102a8565b820191906000526020600020905b81548152906001019060200180831161028b57829003601f168201915b505050505081526020016003820180546102c1906107b4565b80601f01602080910402602001604051908101604052809291908181526020018280546102ed906107b4565b801561033a5780601f1061030f5761010080835404028352916020019161033a565b820191906000526020600020905b81548152906001019060200180831161031d57829003601f168201915b505050918352505060048201546001600160a01b0390811660208301526005830154166040820152600682015460608201526007820154608082015260089091015460ff808216151560a084015261010090910416151560c090910152919050565b60008054600180549192916103b0906107b4565b80601f01602080910402602001604051908101604052809291908181526020018280546103dc906107b4565b80156104295780601f106103fe57610100808354040283529160200191610429565b820191906000526020600020905b81548152906001019060200180831161040c57829003601f168201915b50505050509080600201805461043e906107b4565b80601f016020809104026020016040519081016040528092919081815260200182805461046a906107b4565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050908060030180546104cc906107b4565b80601f01602080910402602001604051908101604052809291908181526020018280546104f8906107b4565b80156105455780601f1061051a57610100808354040283529160200191610545565b820191906000526020600020905b81548152906001019060200180831161052857829003601f168201915b505050600484015460058501546006860154600787015460089097015495966001600160a01b0393841696929093169450925060ff808216916101009004168a565b6004546001600160a01b0316331461059e57600080fd5b60085460ff166105ad57600080fd5b600854610100900460ff16156105c257600080fd5b6005546007546040516001600160a01b039092169181156108fc0291906000818181858888f193505050501580156105fe573d6000803e3d6000fd5b506008805461ff001916610100179055565b6000815180845260005b818110156106365760208185018101518683018201520161061a565b506000602082860101526020601f19601f83011685010191505092915050565b60208152815160208201526000602083015161014080604085015261067f610160850183610610565b91506040850151601f198086850301606087015261069d8483610610565b93506060870151915080868503016080870152506106bb8382610610565b92505060808501516106d860a08601826001600160a01b03169052565b5060a08501516001600160a01b03811660c08601525060c085015160e085015260e085015161010081818701528087015191505061012061071c8187018315159052565b90950151151593019290925250919050565b60006101408c83528060208401526107488184018d610610565b9050828103604084015261075c818c610610565b90508281036060840152610770818b610610565b6001600160a01b03998a1660808501529790981660a08301525060c081019490945260e0840192909252151561010083015215156101209091015295945050505050565b600181811c908216806107c857607f821691505b6020821081036107e857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212200ada242d5dec36f0defdb9e9a2f5f602ea5d2bb0d8b56306c7f3702644af62df64736f6c63430008110033a2646970667358221220d6c9a116e5118a3dbbdac5faf9b7bdd471a6cda1d9ff6079e6da5ef6b518adfd64736f6c63430008110033";

    public static final String FUNC_CREATEINSURANCETEMPLATE = "createInsuranceTemplate";

    public static final String FUNC_GETDEPLOYEDINSURANCES = "getDeployedInsurances";

    public static final String FUNC_GETDEPLOYEDINSURANCESBYFLIGHT = "getDeployedInsurancesByFlight";

    public static final String FUNC_GETINSURANCETEMPLATES = "getInsuranceTemplates";

    public static final String FUNC_GETMYINSURANCES = "getMyInsurances";

    public static final String FUNC_MANAGER = "manager";

    public static final String FUNC_PURCHASETRAVELINSURANCE = "purchaseTravelInsurance";

    @Deprecated
    protected TravelInsuranceFactory(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected TravelInsuranceFactory(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected TravelInsuranceFactory(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected TravelInsuranceFactory(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> createInsuranceTemplate(String _name, BigInteger _premium, BigInteger _payoutAmount) {
        final Function function = new Function(
                FUNC_CREATEINSURANCETEMPLATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.generated.Uint256(_premium), 
                new org.web3j.abi.datatypes.generated.Uint256(_payoutAmount)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<List> getDeployedInsurances() {
        final Function function = new Function(FUNC_GETDEPLOYEDINSURANCES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getDeployedInsurancesByFlight(String _flightNumber, String _departureTime) {
        final Function function = new Function(FUNC_GETDEPLOYEDINSURANCESBYFLIGHT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_flightNumber), 
                new org.web3j.abi.datatypes.Utf8String(_departureTime)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getInsuranceTemplates() {
        final Function function = new Function(FUNC_GETINSURANCETEMPLATES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<InsuranceTemplate>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<List> getMyInsurances() {
        final Function function = new Function(FUNC_GETMYINSURANCES, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<TravelInsuranceData>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<String> manager() {
        final Function function = new Function(FUNC_MANAGER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> purchaseTravelInsurance(BigInteger _templateId, String _flightNumber, String _departureTime, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_PURCHASETRAVELINSURANCE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_templateId), 
                new org.web3j.abi.datatypes.Utf8String(_flightNumber), 
                new org.web3j.abi.datatypes.Utf8String(_departureTime)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    @Deprecated
    public static TravelInsuranceFactory load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new TravelInsuranceFactory(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static TravelInsuranceFactory load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new TravelInsuranceFactory(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static TravelInsuranceFactory load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new TravelInsuranceFactory(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static TravelInsuranceFactory load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new TravelInsuranceFactory(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<TravelInsuranceFactory> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TravelInsuranceFactory.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<TravelInsuranceFactory> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(TravelInsuranceFactory.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TravelInsuranceFactory> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TravelInsuranceFactory.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<TravelInsuranceFactory> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(TravelInsuranceFactory.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class InsuranceTemplate extends DynamicStruct {
        public BigInteger id;

        public String name;

        public BigInteger premium;

        public BigInteger payoutAmount;

        public InsuranceTemplate(BigInteger id, String name, BigInteger premium, BigInteger payoutAmount) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id), 
                    new org.web3j.abi.datatypes.Utf8String(name), 
                    new org.web3j.abi.datatypes.generated.Uint256(premium), 
                    new org.web3j.abi.datatypes.generated.Uint256(payoutAmount));
            this.id = id;
            this.name = name;
            this.premium = premium;
            this.payoutAmount = payoutAmount;
        }

        public InsuranceTemplate(Uint256 id, Utf8String name, Uint256 premium, Uint256 payoutAmount) {
            super(id, name, premium, payoutAmount);
            this.id = id.getValue();
            this.name = name.getValue();
            this.premium = premium.getValue();
            this.payoutAmount = payoutAmount.getValue();
        }
    }

    public static class TravelInsuranceData extends DynamicStruct {
        public BigInteger templateId;

        public String templateName;

        public String flightNumber;

        public String departureTime;

        public String insurer;

        public String insured;

        public BigInteger premium;

        public BigInteger payoutAmount;

        public Boolean isActive;

        public Boolean isPaidOut;

        public TravelInsuranceData(BigInteger templateId, String templateName, String flightNumber, String departureTime, String insurer, String insured, BigInteger premium, BigInteger payoutAmount, Boolean isActive, Boolean isPaidOut) {
            super(new org.web3j.abi.datatypes.generated.Uint256(templateId), 
                    new org.web3j.abi.datatypes.Utf8String(templateName), 
                    new org.web3j.abi.datatypes.Utf8String(flightNumber), 
                    new org.web3j.abi.datatypes.Utf8String(departureTime), 
                    new org.web3j.abi.datatypes.Address(160, insurer), 
                    new org.web3j.abi.datatypes.Address(160, insured), 
                    new org.web3j.abi.datatypes.generated.Uint256(premium), 
                    new org.web3j.abi.datatypes.generated.Uint256(payoutAmount), 
                    new org.web3j.abi.datatypes.Bool(isActive), 
                    new org.web3j.abi.datatypes.Bool(isPaidOut));
            this.templateId = templateId;
            this.templateName = templateName;
            this.flightNumber = flightNumber;
            this.departureTime = departureTime;
            this.insurer = insurer;
            this.insured = insured;
            this.premium = premium;
            this.payoutAmount = payoutAmount;
            this.isActive = isActive;
            this.isPaidOut = isPaidOut;
        }

        public TravelInsuranceData(Uint256 templateId, Utf8String templateName, Utf8String flightNumber, Utf8String departureTime, Address insurer, Address insured, Uint256 premium, Uint256 payoutAmount, Bool isActive, Bool isPaidOut) {
            super(templateId, templateName, flightNumber, departureTime, insurer, insured, premium, payoutAmount, isActive, isPaidOut);
            this.templateId = templateId.getValue();
            this.templateName = templateName.getValue();
            this.flightNumber = flightNumber.getValue();
            this.departureTime = departureTime.getValue();
            this.insurer = insurer.getValue();
            this.insured = insured.getValue();
            this.premium = premium.getValue();
            this.payoutAmount = payoutAmount.getValue();
            this.isActive = isActive.getValue();
            this.isPaidOut = isPaidOut.getValue();
        }
    }
}
